R"(
%INCLUDES%

struct %INDICATOR_CLASS%
{
	double ratio = 0.0;
	%INDICATOR_CLASS%(double _ratio)
	{
		ratio = _ratio;
	}

	std::string getName()
	{
		return "%INDICATOR_LABEL%";
	}

	indicator_data calculate(const candleset& candles, unsigned int index,
		unsigned int window)
	{
		unsigned int range = window * ratio;
		unsigned int startIndex = (index + 1) - window;
		std::vector<double> data(window);
		if(index >= candles.size() || startIndex >= candles.size())
		{
			std::cout << getName() << ": index out of bounds\n";
			return { getName(), data };
		}
		
		%CALCULATE_SCRIPT%
		
		return { getName(), data };
	}
};
)"
